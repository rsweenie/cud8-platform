/*  --------------------------------------------------------------------------  *\

    GLOBAL MIXINS

    These are a common set of mixins that are commonly

\*  --------------------------------------------------------------------------  */
/*---=== SR ONLY ===---*/
@mixin srOnly {
    // POSITIONING (DISPLAY, FLEX, FLEX ITEM, POSITION, LEFT, TOP, TRANSFORM)
    position: absolute;
    // BOX SIZING (WIDTH, HEIGHT, MARGIN, PADDING)
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    // BOX STYLING (OPACITY, BACKGROUND, BOX SHADOW, BORDER, BORDER RADIUS, OVERFLOW)
    border: 0;
    // FONT STYLING (FONT, FONT-FAMILY, FONT-STYLE, FONT-SIZE, LINE-HEIGHT, FONT-WEIGHT)
    // TEXT STYLING (TEXT-DECORATION, TEXT-TRANSFORM, TEXT-ALIGN, TEXT-SHADOW)
    // OTHER (TRANSITONS, ANIMATIONS, CURSOR)
    overflow: hidden;
    clip: rect(0,0,0,0);
}
/*---=== CLEAR FIX ===---*/
@mixin clearfix {
    &:before, &:after {
        // POSITIONING (DISPLAY, FLEX, FLEX ITEM, POSITION, LEFT, TOP, TRANSFORM)
        display: block;
        // BOX SIZING (WIDTH, HEIGHT, MARGIN, PADDING)
        height: 0;
        width: 100%;
        // BOX STYLING (OPACITY, BACKGROUND, BOX SHADOW, BORDER, BORDER RADIUS, OVERFLOW)
        // FONT STYLING (FONT, FONT-FAMILY, FONT-STYLE, FONT-SIZE, LINE-HEIGHT, FONT-WEIGHT)
        // TEXT STYLING (TEXT-DECORATION, TEXT-TRANSFORM, TEXT-ALIGN, TEXT-SHADOW)
        // OTHER (TRANSITONS, ANIMATIONS, CURSOR)
        content: "";
        clear: both;
    }
}
/*--- CLEAR ---*/
@mixin clear() {
    &:after, &:before {
        // POSITIONING (DISPLAY, FLEX, FLEX ITEM, POSITION, LEFT, TOP, TRANSFORM)
        display: block;
        // BOX SIZING (WIDTH, HEIGHT, MARGIN, PADDING)
        height: 0;
        width: 100%;
        // BOX STYLING (OPACITY, BACKGROUND, BOX SHADOW, BORDER, BORDER RADIUS, OVERFLOW)
        // FONT STYLING (FONT, FONT-FAMILY, FONT-STYLE, FONT-SIZE, LINE-HEIGHT, FONT-WEIGHT)
        // TEXT STYLING (TEXT-DECORATION, TEXT-TRANSFORM, TEXT-ALIGN, TEXT-SHADOW)
        // OTHER (TRANSITONS, ANIMATIONS, CURSOR)
        content: "";
        clear: both;
    }
}
/*---=== HOVER/FOCUS ===---*/
@mixin hover {
    &:hover, &:focus {
        @content;
    }
}
/*---=== BOXSHADOW ===---*/
@mixin boxShadow($val) {
    @if ($val == none) {
        // POSITIONING (DISPLAY, FLEX, FLEX ITEM, POSITION, LEFT, TOP, TRANSFORM)
        // BOX SIZING (WIDTH, HEIGHT, MARGIN, PADDING)
        // BOX STYLING (OPACITY, BACKGROUND, BOX SHADOW, BORDER, BORDER RADIUS, OVERFLOW)
        box-shadow: none;
        // FONT STYLING (FONT, FONT-FAMILY, FONT-STYLE, FONT-SIZE, LINE-HEIGHT, FONT-WEIGHT)
        // TEXT STYLING (TEXT-DECORATION, TEXT-TRANSFORM, TEXT-ALIGN, TEXT-SHADOW)
        // OTHER (TRANSITONS, ANIMATIONS, CURSOR)
    } @else {
        // POSITIONING (DISPLAY, FLEX, FLEX ITEM, POSITION, LEFT, TOP, TRANSFORM)
        // BOX SIZING (WIDTH, HEIGHT, MARGIN, PADDING)
        // BOX STYLING (OPACITY, BACKGROUND, BOX SHADOW, BORDER, BORDER RADIUS, OVERFLOW)
        box-shadow: $val;
        // FONT STYLING (FONT, FONT-FAMILY, FONT-STYLE, FONT-SIZE, LINE-HEIGHT, FONT-WEIGHT)
        // TEXT STYLING (TEXT-DECORATION, TEXT-TRANSFORM, TEXT-ALIGN, TEXT-SHADOW)
        // OTHER (TRANSITONS, ANIMATIONS, CURSOR)
    }
}
/*---=== TEXTSHADOW ===---*/
@mixin textShadow($h: 0, $v: 0, $b: 1.5rem, $c: rgba($primary, .5)) {
    // POSITIONING (DISPLAY, FLEX, FLEX ITEM, POSITION, LEFT, TOP, TRANSFORM)
    // BOX SIZING (WIDTH, HEIGHT, MARGIN, PADDING)
    // BOX STYLING (OPACITY, BACKGROUND, BOX SHADOW, BORDER, BORDER RADIUS, OVERFLOW)
    // FONT STYLING (FONT, FONT-FAMILY, FONT-STYLE, FONT-SIZE, LINE-HEIGHT, FONT-WEIGHT)
    // TEXT STYLING (TEXT-DECORATION, TEXT-TRANSFORM, TEXT-ALIGN, TEXT-SHADOW)
    text-shadow: $h $v $b $c;
    // OTHER (TRANSITONS, ANIMATIONS, CURSOR)
}
/*---=== OVERLAY ===---*/
// PARENT ELEMENT MUST BE SET TO RELATIVE, FIXED, OR ABSOLUTE IN ORDER FOR THIS MIXIN TO WORK CORRECTLY
@mixin overlay($sel: "&:before", $zi: 50, $w: 100%, $h: 100%, $bg: rgba($primary, .25), $pos: absolute, $xy: (0,0), $dir: (left, top), $trans: null) {
    #{$sel} {
        // POSITIONING (DISPLAY, FLEX, FLEX ITEM, POSITION, LEFT, TOP, TRANSFORM)
        @include position($pos, $zi, $xy, $dir, $trans);
        // BOX SIZING (WIDTH, HEIGHT, MARGIN, PADDING)
        width: $w;
        height: $h;
        // BOX STYLING (OPACITY, BACKGROUND, BOX SHADOW, BORDER, BORDER RADIUS, OVERFLOW)
        background: $bg;
        // FONT STYLING (FONT, FONT-FAMILY, FONT-STYLE, FONT-SIZE, LINE-HEIGHT, FONT-WEIGHT)
        // TEXT STYLING (TEXT-DECORATION, TEXT-TRANSFORM, TEXT-ALIGN, TEXT-SHADOW)
        // OTHER (TRANSITONS, ANIMATIONS, CURSOR)
        content: "";
    }
}
/*---=== TRANSFORM ===---*/
@mixin transform($val) {
    // POSITIONING (DISPLAY, FLEX, FLEX ITEM, POSITION, LEFT, TOP, TRANSFORM)
    -webkit-transform: $val;
        -ms-transform: $val;
            transform: $val;
    // BOX SIZING (WIDTH, HEIGHT, MARGIN, PADDING)
    // BOX STYLING (OPACITY, BACKGROUND, BOX SHADOW, BORDER, BORDER RADIUS, OVERFLOW)
    // FONT STYLING (FONT, FONT-FAMILY, FONT-STYLE, FONT-SIZE, LINE-HEIGHT, FONT-WEIGHT
    // TEXT STYLING (TEXT-DECORATION, TEXT-TRANSFORM, TEXT-ALIGN, TEXT-SHADOW)
    // OTHER (TRANSITONS, ANIMATIONS, CURSOR)
}
@mixin transformOrigin($val) {
    // POSITIONING (DISPLAY, FLEX, FLEX ITEM, POSITION, LEFT, TOP, TRANSFORM)
    -webkit-transform-origin: $val;
        -ms-transform-origin: $val;
            transform-origin: $val;
    // BOX SIZING (WIDTH, HEIGHT, MARGIN, PADDING)
    // BOX STYLING (OPACITY, BACKGROUND, BOX SHADOW, BORDER, BORDER RADIUS, OVERFLOW)
    // FONT STYLING (FONT, FONT-FAMILY, FONT-STYLE, FONT-SIZE, LINE-HEIGHT, FONT-WEIGHT
    // TEXT STYLING (TEXT-DECORATION, TEXT-TRANSFORM, TEXT-ALIGN, TEXT-SHADOW)
    // OTHER (TRANSITONS, ANIMATIONS, CURSOR)
}
@mixin perspective($val) {
    // POSITIONING (DISPLAY, FLEX, FLEX ITEM, POSITION, LEFT, TOP, TRANSFORM)
    -webkit-perspective: $val;
        -ms-perspective: $val;
            perspective: $val;
    // BOX SIZING (WIDTH, HEIGHT, MARGIN, PADDING)
    // BOX STYLING (OPACITY, BACKGROUND, BOX SHADOW, BORDER, BORDER RADIUS, OVERFLOW)
    // FONT STYLING (FONT, FONT-FAMILY, FONT-STYLE, FONT-SIZE, LINE-HEIGHT, FONT-WEIGHT)
    // TEXT STYLING (TEXT-DECORATION, TEXT-TRANSFORM, TEXT-ALIGN, TEXT-SHADOW)
    // OTHER (TRANSITONS, ANIMATIONS, CURSOR)
}
@mixin backface($val) {
    // POSITIONING (DISPLAY, FLEX, FLEX ITEM, POSITION, LEFT, TOP, TRANSFORM)
    -webkit-backface: $val;
            backface: $val;
    // BOX SIZING (WIDTH, HEIGHT, MARGIN, PADDING)
    // BOX STYLING (OPACITY, BACKGROUND, BOX SHADOW, BORDER, BORDER RADIUS, OVERFLOW)
    // FONT STYLING (FONT, FONT-FAMILY, FONT-STYLE, FONT-SIZE, LINE-HEIGHT, FONT-WEIGHT)
    // TEXT STYLING (TEXT-DECORATION, TEXT-TRANSFORM, TEXT-ALIGN, TEXT-SHADOW)
    // OTHER (TRANSITONS, ANIMATIONS, CURSOR)
}
/*---=== POSITION ===---*/
@mixin position($pos: relative, $zi: 0, $dir: null, $xy: null, $trans: null) {
    @if ($pos == absolute) or ($pos == fixed) or ($pos == sticky) {
        // POSITIONING (DISPLAY, FLEX, FLEX ITEM, POSITION, LEFT, TOP, TRANSFORM)
        // BOX SIZING (WIDTH, HEIGHT, MARGIN, PADDING)
        // BOX STYLING (OPACITY, BACKGROUND, BOX SHADOW, BORDER, BORDER RADIUS, OVERFLOW)
        // FONT STYLING (FONT, FONT-FAMILY, FONT-STYLE, FONT-SIZE, LINE-HEIGHT, FONT-WEIGHT)
        // TEXT STYLING (TEXT-DECORATION, TEXT-TRANSFORM, TEXT-ALIGN, TEXT-SHADOW)
        // OTHER (TRANSITONS, ANIMATIONS, CURSOR)
        @if ($pos == sticky) {
        position: -webkit-sticky;
        position: sticky;
        } @else {
            position: $pos;
        }
        z-index: $zi;
        @if ($dir and $xy) {
            @each $d in $dir {
                $i: index($dir, $d);
                @if (length($xy) > ($i - 1)) {
                    #{$d}: #{nth($xy, $i)};
                }
            }
        }
      transform: $trans;
    } @else if ($pos == relative) {
        // POSITIONING (DISPLAY, FLEX, FLEX ITEM, POSITION, LEFT, TOP, TRANSFORM)
        // BOX SIZING (WIDTH, HEIGHT, MARGIN, PADDING)
        // BOX STYLING (OPACITY, BACKGROUND, BOX SHADOW, BORDER, BORDER RADIUS, OVERFLOW)
        // FONT STYLING (FONT, FONT-FAMILY, FONT-STYLE, FONT-SIZE, LINE-HEIGHT, FONT-WEIGHT)
        // TEXT STYLING (TEXT-DECORATION, TEXT-TRANSFORM, TEXT-ALIGN, TEXT-SHADOW)
        // OTHER (TRANSITONS, ANIMATIONS, CURSOR)
        position: relative;
        z-index: $zi;
        transform: $trans;
    } @else if ($pos == static) {
        // POSITIONING (DISPLAY, FLEX, FLEX ITEM, POSITION, LEFT, TOP, TRANSFORM)
        // BOX SIZING (WIDTH, HEIGHT, MARGIN, PADDING)
        // BOX STYLING (OPACITY, BACKGROUND, BOX SHADOW, BORDER, BORDER RADIUS, OVERFLOW)
        // FONT STYLING (FONT, FONT-FAMILY, FONT-STYLE, FONT-SIZE, LINE-HEIGHT, FONT-WEIGHT)
        // TEXT STYLING (TEXT-DECORATION, TEXT-TRANSFORM, TEXT-ALIGN, TEXT-SHADOW)
        // OTHER (TRANSITONS, ANIMATIONS, CURSOR)
        position: static;
        transform: $trans;
    }
}
/*---=== FLEX ===---*/
@mixin flex($jc: null, $ai: null, $ac: null, $ff: row wrap) {
    // POSITIONING (DISPLAY, FLEX, FLEX ITEM, POSITION, LEFT, TOP, TRANSFORM)
    display: -webkit-box;
    display:     -ms-flexbox;
    display: -webkit-flex;
    display:         flex;
    justify-content: $jc;
    align-items: $ai;
    align-content: $ac;
    flex-flow: $ff;
    // BOX SIZING (WIDTH, HEIGHT, MARGIN, PADDING)
    // BOX STYLING (OPACITY, BACKGROUND, BOX SHADOW, BORDER, BORDER RADIUS, OVERFLOW)
    // FONT STYLING (FONT, FONT-FAMILY, FONT-STYLE, FONT-SIZE, LINE-HEIGHT, FONT-WEIGHT)
    // TEXT STYLING (TEXT-DECORATION, TEXT-TRANSFORM, TEXT-ALIGN, TEXT-SHADOW)
    // OTHER (TRANSITONS, ANIMATIONS, CURSOR)
}
@mixin flexItem($g: 0, $s: 1, $b: auto, $o: 0) {
    // POSITIONING (DISPLAY, FLEX, FLEX ITEM, POSITION, LEFT, TOP, TRANSFORM)
    -webkit-box-flex: $g $s $b;
        -webkit-flex: $g $s $b;
            -ms-flex: $g $s $b;
                flex: $g $s $b;
    order: $o;
    // BOX SIZING (WIDTH, HEIGHT, MARGIN, PADDING)
    // BOX STYLING (OPACITY, BACKGROUND, BOX SHADOW, BORDER, BORDER RADIUS, OVERFLOW)
    // FONT STYLING (FONT, FONT-FAMILY, FONT-STYLE, FONT-SIZE, LINE-HEIGHT, FONT-WEIGHT)
    // TEXT STYLING (TEXT-DECORATION, TEXT-TRANSFORM, TEXT-ALIGN, TEXT-SHADOW)
    // OTHER (TRANSITONS, ANIMATIONS, CURSOR)
}
/*---=== COLUMNS ===---*/
@mixin multicolumn($c: 2, $g: (#{$gutter}rem), $r: .2rem solid $accent-2) {
    // POSITIONING (DISPLAY, FLEX, FLEX ITEM, POSITION, LEFT, TOP, TRANSFORM)
    // BOX SIZING (WIDTH, HEIGHT, MARGIN, PADDING)
    // BOX STYLING (OPACITY, BACKGROUND, BOX SHADOW, BORDER, BORDER RADIUS, OVERFLOW)
    -webkit-column-count: $c;
        -ms-column-count: $c;
            column-count: $c;
    -webkit-column-gap: $g;
        -ms-column-gap: $g;
            column-gap: $g;
    // -webkit-column-rule: $r;
    //     -ms-column-rule: $r;
    //         column-rule: $r;
    // FONT STYLING (FONT, FONT-FAMILY, FONT-STYLE, FONT-SIZE, LINE-HEIGHT, FONT-WEIGHT
    // TEXT STYLING (TEXT-DECORATION, TEXT-TRANSFORM, TEXT-ALIGN, TEXT-SHADOW)
    // OTHER (TRANSITONS, ANIMATIONS, CURSOR)
}
/*---=== APPEARANCE ===---*/
@mixin appearance($a) {
    // POSITIONING (DISPLAY, FLEX, FLEX ITEM, POSITION, LEFT, TOP, TRANSFORM)
    // BOX SIZING (WIDTH, HEIGHT, MARGIN, PADDING)
    // BOX STYLING (OPACITY, BACKGROUND, BOX SHADOW, BORDER, BORDER RADIUS, OVERFLOW)
    // FONT STYLING (FONT, FONT-FAMILY, FONT-STYLE, FONT-SIZE, LINE-HEIGHT, FONT-WEIGHT
    // TEXT STYLING (TEXT-DECORATION, TEXT-TRANSFORM, TEXT-ALIGN, TEXT-SHADOW)
    // OTHER (TRANSITONS, ANIMATIONS, CURSOR)
    -webkit-appearance: $a;
       -moz-appearance: $a;
            appearance: $a;
}
/*---=== GRID ===---*/
@mixin row(
    $rowSel: '.row',
    $f: (space-between, stretch, flex-start, row wrap),
    $mv: 0,
    $mh: (#{$gutter * -1})
) {
    #{$rowSel} {
        // POSITIONING (DISPLAY, FLEX, FLEX ITEM, POSITION, LEFT, TOP, TRANSFORM)
        @include flex($f...);
        // BOX SIZING (WIDTH, HEIGHT, MARGIN, PADDING)
        margin: $mv #{$mh}rem;
        width: calc(100% + (#{$mh}rem * -2));
        // BOX STYLING (OPACITY, BACKGROUND, BOX SHADOW, BORDER, BORDER RADIUS, OVERFLOW)
        // FONT STYLING (FONT, FONT-FAMILY, FONT-STYLE, FONT-SIZE, LINE-HEIGHT, FONT-WEIGHT)
        // TEXT STYLING (TEXT-DECORATION, TEXT-TRANSFORM, TEXT-ALIGN, TEXT-SHADOW)
        // OTHER (TRANSITONS, ANIMATIONS, CURSOR)
    }
}

/*--- GRID GENERATOR ---*/
@mixin setColWidths($size: xs) {
    $class-slug: col-#{$size};

    @for $i from 1 through $gridCount {
        .#{$class-slug}-#{$i} {
            // POSITIONING (DISPLAY, FLEX, FLEX ITEM, POSITION, LEFT, TOP, TRANSFORM)
            // BOX SIZING (WIDTH, HEIGHT, MARGIN, PADDING)
            width: #{percentage($i / $gridCount)};
            // BOX STYLING (OPACITY, BACKGROUND, BOX SHADOW, BORDER, BORDER RADIUS, OVERFLOW)
            // FONT STYLING (FONT, FONT-FAMILY, FONT-STYLE, FONT-SIZE, LINE-HEIGHT, FONT-WEIGHT)
            // TEXT STYLING (TEXT-DECORATION, TEXT-TRANSFORM, TEXT-ALIGN, TEXT-SHADOW)
            // OTHER (TRANSITONS, ANIMATIONS, CURSOR)
        }
    }
}
@mixin generateCols($mGCMediaList: $gridMediaList, $mGCMediaQueryList: $gridMediaQueryList) {
    @each $mediaQuery in $mGCMediaList {
        $i: index($mGCMediaList, $mediaQuery);
        $query: nth($mGCMediaQueryList, $i);

        @if ($i == 1) {
            $sizeSlug: to-lower-case($mediaQuery);
            @include setColWidths(#{$sizeSlug});
        } @else {

            @media #{$query} {
                $sizeSlug: to-lower-case($mediaQuery);
                @include setColWidths(#{$sizeSlug});
            }
        }
    }
}
/*---=== EFFECTS ===---*/
/*--- ANIMATIONS ---*/
@mixin keyframes($name) {
    @-webkit-keyframes #{$name} {
        @content;
    }
    @keyframes #{$name} {
        @content;
    }
}
@mixin animation($val) {
    // POSITIONING (DISPLAY, FLEX, FLEX ITEM, POSITION, LEFT, TOP, TRANSFORM)
    // BOX SIZING (WIDTH, HEIGHT, MARGIN, PADDING)
    // BOX STYLING (OPACITY, BACKGROUND, BOX SHADOW, BORDER, BORDER RADIUS, OVERFLOW)
    // FONT STYLING (FONT, FONT-FAMILY, FONT-STYLE, FONT-SIZE, LINE-HEIGHT, FONT-WEIGHT
    // TEXT STYLING (TEXT-DECORATION, TEXT-TRANSFORM, TEXT-ALIGN, TEXT-SHADOW)
    // OTHER (TRANSITONS, ANIMATIONS, CURSOR)
    -webkit-animation: #{$val};
            animation: #{$val};
}
@mixin animationIteration($val) {
    // POSITIONING (DISPLAY, FLEX, FLEX ITEM, POSITION, LEFT, TOP, TRANSFORM)
    // BOX SIZING (WIDTH, HEIGHT, MARGIN, PADDING)
    // BOX STYLING (OPACITY, BACKGROUND, BOX SHADOW, BORDER, BORDER RADIUS, OVERFLOW)
    // FONT STYLING (FONT, FONT-FAMILY, FONT-STYLE, FONT-SIZE, LINE-HEIGHT, FONT-WEIGHT
    // TEXT STYLING (TEXT-DECORATION, TEXT-TRANSFORM, TEXT-ALIGN, TEXT-SHADOW)
    // OTHER (TRANSITONS, ANIMATIONS, CURSOR)
    -webkit-animation-iteration-count: #{$val};
            animation-iteration-count: #{$val};
}
@mixin animationName($name) {
    // POSITIONING (DISPLAY, FLEX, FLEX ITEM, POSITION, LEFT, TOP, TRANSFORM)
    // BOX SIZING (WIDTH, HEIGHT, MARGIN, PADDING)
    // BOX STYLING (OPACITY, BACKGROUND, BOX SHADOW, BORDER, BORDER RADIUS, OVERFLOW)
    // FONT STYLING (FONT, FONT-FAMILY, FONT-STYLE, FONT-SIZE, LINE-HEIGHT, FONT-WEIGHT
    // TEXT STYLING (TEXT-DECORATION, TEXT-TRANSFORM, TEXT-ALIGN, TEXT-SHADOW)
    // OTHER (TRANSITONS, ANIMATIONS, CURSOR)
    -webkit-animation-name: #{$name};
            animation-name: #{$name};
}
@mixin animationTiming($val) {
    // POSITIONING (DISPLAY, FLEX, FLEX ITEM, POSITION, LEFT, TOP, TRANSFORM)
    // BOX SIZING (WIDTH, HEIGHT, MARGIN, PADDING)
    // BOX STYLING (OPACITY, BACKGROUND, BOX SHADOW, BORDER, BORDER RADIUS, OVERFLOW)
    // FONT STYLING (FONT, FONT-FAMILY, FONT-STYLE, FONT-SIZE, LINE-HEIGHT, FONT-WEIGHT
    // TEXT STYLING (TEXT-DECORATION, TEXT-TRANSFORM, TEXT-ALIGN, TEXT-SHADOW)
    // OTHER (TRANSITONS, ANIMATIONS, CURSOR)
    -webkit-animation-timing-function: #{$val};
            animation-timing-function: #{$val};
}
@mixin animationDuration($val) {
    // POSITIONING (DISPLAY, FLEX, FLEX ITEM, POSITION, LEFT, TOP, TRANSFORM)
    // BOX SIZING (WIDTH, HEIGHT, MARGIN, PADDING)
    // BOX STYLING (OPACITY, BACKGROUND, BOX SHADOW, BORDER, BORDER RADIUS, OVERFLOW)
    // FONT STYLING (FONT, FONT-FAMILY, FONT-STYLE, FONT-SIZE, LINE-HEIGHT, FONT-WEIGHT
    // TEXT STYLING (TEXT-DECORATION, TEXT-TRANSFORM, TEXT-ALIGN, TEXT-SHADOW)
    // OTHER (TRANSITONS, ANIMATIONS, CURSOR)
    -webkit-animation-duration: $val;
            animation-duration: $val;
}
@mixin animationDelay($val) {
    // POSITIONING (DISPLAY, FLEX, FLEX ITEM, POSITION, LEFT, TOP, TRANSFORM)
    // BOX SIZING (WIDTH, HEIGHT, MARGIN, PADDING)
    // BOX STYLING (OPACITY, BACKGROUND, BOX SHADOW, BORDER, BORDER RADIUS, OVERFLOW)
    // FONT STYLING (FONT, FONT-FAMILY, FONT-STYLE, FONT-SIZE, LINE-HEIGHT, FONT-WEIGHT
    // TEXT STYLING (TEXT-DECORATION, TEXT-TRANSFORM, TEXT-ALIGN, TEXT-SHADOW)
    // OTHER (TRANSITONS, ANIMATIONS, CURSOR)
    -webkit-animation-delay: $val;
            animation-delay: $val;
}
@mixin animationFillMode($val) {
    // POSITIONING (DISPLAY, FLEX, FLEX ITEM, POSITION, LEFT, TOP, TRANSFORM)
    // BOX SIZING (WIDTH, HEIGHT, MARGIN, PADDING)
    // BOX STYLING (OPACITY, BACKGROUND, BOX SHADOW, BORDER, BORDER RADIUS, OVERFLOW)
    // FONT STYLING (FONT, FONT-FAMILY, FONT-STYLE, FONT-SIZE, LINE-HEIGHT, FONT-WEIGHT
    // TEXT STYLING (TEXT-DECORATION, TEXT-TRANSFORM, TEXT-ALIGN, TEXT-SHADOW)
    // OTHER (TRANSITONS, ANIMATIONS, CURSOR)
    -webkit-animation-fill-mode: $val;
            animation-fill-mode: $val;
}
/*--- FILTERS ---*/
@mixin filter($filter) {
    // POSITIONING (DISPLAY, FLEX, FLEX ITEM, POSITION, LEFT, TOP, TRANSFORM)
    // BOX SIZING (WIDTH, HEIGHT, MARGIN, PADDING)
    // BOX STYLING (OPACITY, BACKGROUND, BOX SHADOW, BORDER, BORDER RADIUS, OVERFLOW)
    // FONT STYLING (FONT, FONT-FAMILY, FONT-STYLE, FONT-SIZE, LINE-HEIGHT, FONT-WEIGHT
    // TEXT STYLING (TEXT-DECORATION, TEXT-TRANSFORM, TEXT-ALIGN, TEXT-SHADOW)
    // OTHER (TRANSITONS, ANIMATIONS, CURSOR)
    -webkit-filter: $filter;
            filter: $filter;
}
/*--- TRANSITION ---*/
@mixin transition($val: all) {
    // POSITIONING (DISPLAY, FLEX, FLEX ITEM, POSITION, LEFT, TOP, TRANSFORM)
    // BOX SIZING (WIDTH, HEIGHT, MARGIN, PADDING)
    // BOX STYLING (OPACITY, BACKGROUND, BOX SHADOW, BORDER, BORDER RADIUS, OVERFLOW)
    // FONT STYLING (FONT, FONT-FAMILY, FONT-STYLE, FONT-SIZE, LINE-HEIGHT, FONT-WEIGHT
    // TEXT STYLING (TEXT-DECORATION, TEXT-TRANSFORM, TEXT-ALIGN, TEXT-SHADOW)
    // OTHER (TRANSITONS, ANIMATIONS, CURSOR)
    transition: $val;
}
/*---=== FONTS ===---*/
/*--- FONT SIZE ---*/
@mixin fontSize($fs, $lh: false) {
    // POSITIONING (DISPLAY, FLEX, FLEX ITEM, POSITION, LEFT, TOP, TRANSFORM)
    // BOX SIZING (WIDTH, HEIGHT, MARGIN, PADDING)
    // BOX STYLING (OPACITY, BACKGROUND, BOX SHADOW, BORDER, BORDER RADIUS, OVERFLOW)
    // FONT STYLING (FONT, FONT-FAMILY, FONT-STYLE, FONT-SIZE, LINE-HEIGHT, FONT-WEIGHT)
    font-size: #{$fs}rem;
    @if ($lh) {
        line-height: $lh;
    }
    // TEXT STYLING (TEXT-DECORATION, TEXT-TRANSFORM, TEXT-ALIGN, TEXT-SHADOW)
    // OTHER (TRANSITONS, ANIMATIONS, CURSOR)
}

@mixin letterSpacing($ls) {
  letter-spacing: ($ls / 1000) * 1em;
}

@mixin contentConstrain {
  max-width: $siteWMx;
  margin: 0 auto;

  @each $q in $siteWQueryList {
      $i: index($siteWQueryList, $q);

      @if $i == 1 {
          // POSITIONING (DISPLAY, FLEX, FLEX ITEM, POSITION, LEFT, TOP, TRANSFORM)
          // BOX SIZING (WIDTH, HEIGHT, MARGIN, PADDING)
          width: nth($siteWList, $i);
          // BOX STYLING (OPACITY, BACKGROUND, BOX SHADOW, BORDER, BORDER RADIUS, OVERFLOW)
          // FONT STYLING (FONT, FONT-FAMILY, FONT-STYLE, FONT-SIZE, LINE-HEIGHT, FONT-WEIGHT)
          // TEXT STYLING (TEXT-DECORATION, TEXT-TRANSFORM, TEXT-ALIGN, TEXT-SHADOW)
          // OTHER (TRANSITONS, ANIMATIONS, CURSOR)
      } @else {
          @media #{$q} {
              // POSITIONING (DISPLAY, FLEX, FLEX ITEM, POSITION, LEFT, TOP, TRANSFORM)
              // BOX SIZING (WIDTH, HEIGHT, MARGIN, PADDING)
              width: nth($siteWList, $i);
              // BOX STYLING (OPACITY, BACKGROUND, BOX SHADOW, BORDER, BORDER RADIUS, OVERFLOW)
              // FONT STYLING (FONT, FONT-FAMILY, FONT-STYLE, FONT-SIZE, LINE-HEIGHT, FONT-WEIGHT)
              // TEXT STYLING (TEXT-DECORATION, TEXT-TRANSFORM, TEXT-ALIGN, TEXT-SHADOW)
              // OTHER (TRANSITONS, ANIMATIONS, CURSOR)
          }
      }
  }
}

@mixin innerBorder {
  &:after {
    width: calc(100% - 16px);
    height: calc(100% - 16px);
    position: absolute;
    top: 8px;
    left: 8px;
    content: "";
    border: 2px solid rgba($white,.3);
    pointer-events: none;

    @media #{$mediaMd} {
      width: calc(100% - 30px);
      height: calc(100% - 30px);
      top: 15px;
      left: 15px;
    }
  }
}
