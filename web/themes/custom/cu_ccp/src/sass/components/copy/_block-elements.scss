/*  --------------------------------------------------------------------------  *\

    COPY - BLOCK ELEMENTS

\*  --------------------------------------------------------------------------  */
@mixin intro {
  // POSITIONING (DISPLAY, FLEX, FLEX ITEM, POSITION, LEFT, TOP, TRANSFORM)
  // BOX SIZING (WIDTH, HEIGHT, MARGIN, PADDING)
  // BOX STYLING (OPACITY, BACKGROUND, BOX SHADOW, BORDER, BORDER RADIUS, OVERFLOW)
  // FONT STYLING (FONT, FONT-FAMILY, FONT-STYLE, FONT-SIZE, LINE-HEIGHT, FONT-WEIGHT)
  font-size: 16px;
  font-family: $headingFF;
  line-height: 1.3em;
  font-weight: 600;
  color: $primary;
  margin-bottom: 1em;
  // TEXT STYLING (TEXT-DECORATION, TEXT-TRANSFORM, TEXT-ALIGN, TEXT-SHADOW)
  // OTHER (TRANSITONS, ANIMATIONS, CURSOR)

  @media #{$mediaMd} {
    font-size: 30px;
  }
}

p, ul, ol, dl, table, blockquote, figure {
    // POSITIONING (DISPLAY, FLEX, FLEX ITEM, POSITION, LEFT, TOP, TRANSFORM)
    // BOX SIZING (WIDTH, HEIGHT, MARGIN, PADDING)
    padding: 0;
    margin: 0 0 1.5em;
    // BOX STYLING (OPACITY, BACKGROUND, BOX SHADOW, BORDER, BORDER RADIUS, OVERFLOW)
    // FONT STYLING (FONT, FONT-FAMILY, FONT-STYLE, FONT-SIZE, LINE-HEIGHT, FONT-WEIGHT)
    // TEXT STYLING (TEXT-DECORATION, TEXT-TRANSFORM, TEXT-ALIGN, TEXT-SHADOW)
    // OTHER (TRANSITONS, ANIMATIONS, CURSOR)

    aside & {
        margin: 0 0 #{$gutter * .4}rem;
    }
}
hr {
    // POSITIONING (DISPLAY, FLEX, FLEX ITEM, POSITION, LEFT, TOP, TRANSFORM)
    // BOX SIZING (WIDTH, HEIGHT, MARGIN, PADDING)
    margin: #{$gutter}rem auto;
    width: 100%;
    height: .2rem;
    // BOX STYLING (OPACITY, BACKGROUND, BOX SHADOW, BORDER, BORDER RADIUS, OVERFLOW)
    background: $accent-2;
    border: none;
    // FONT STYLING (FONT, FONT-FAMILY, FONT-STYLE, FONT-SIZE, LINE-HEIGHT, FONT-WEIGHT)
    // TEXT STYLING (TEXT-DECORATION, TEXT-TRANSFORM, TEXT-ALIGN, TEXT-SHADOW)
    // OTHER (TRANSITONS, ANIMATIONS, CURSOR)

    @media #{$mediaMd} {
        margin: #{$gutter * 1.5}rem auto;
    }

    @media #{$mediaLg} {
        margin: #{$gutter * 2}rem auto;
    }
}
.intro {
  @include intro;
}

.disclaimer {
    // POSITIONING (DISPLAY, FLEX, FLEX ITEM, POSITION, LEFT, TOP, TRANSFORM)
    // BOX SIZING (WIDTH, HEIGHT, MARGIN, PADDING)
    // BOX STYLING (OPACITY, BACKGROUND, BOX SHADOW, BORDER, BORDER RADIUS, OVERFLOW)
    // FONT STYLING (FONT, FONT-FAMILY, FONT-STYLE, FONT-SIZE, LINE-HEIGHT, FONT-WEIGHT)
    color: $tertiary;
    font-size: $copyFS * .75;
    // TEXT STYLING (TEXT-DECORATION, TEXT-TRANSFORM, TEXT-ALIGN, TEXT-SHADOW)
    // OTHER (TRANSITONS, ANIMATIONS, CURSOR)
}
.ta-left {
    // POSITIONING (DISPLAY, FLEX, FLEX ITEM, POSITION, LEFT, TOP, TRANSFORM)
    // BOX SIZING (WIDTH, HEIGHT, MARGIN, PADDING)
    // BOX STYLING (OPACITY, BACKGROUND, BOX SHADOW, BORDER, BORDER RADIUS, OVERFLOW)
    // FONT STYLING (FONT, FONT-FAMILY, FONT-STYLE, FONT-SIZE, LINE-HEIGHT, FONT-WEIGHT)
    // TEXT STYLING (TEXT-DECORATION, TEXT-TRANSFORM, TEXT-ALIGN, TEXT-SHADOW)
    text-align: left !important; // TO OVERRIDE ALIGNMENTS OTHER CLASSES MAY DEFINE
    // OTHER (TRANSITONS, ANIMATIONS, CURSOR)
}
.ta-center {
    // POSITIONING (DISPLAY, FLEX, FLEX ITEM, POSITION, LEFT, TOP, TRANSFORM)
    // BOX SIZING (WIDTH, HEIGHT, MARGIN, PADDING)
    // BOX STYLING (OPACITY, BACKGROUND, BOX SHADOW, BORDER, BORDER RADIUS, OVERFLOW)
    // FONT STYLING (FONT, FONT-FAMILY, FONT-STYLE, FONT-SIZE, LINE-HEIGHT, FONT-WEIGHT)
    // TEXT STYLING (TEXT-DECORATION, TEXT-TRANSFORM, TEXT-ALIGN, TEXT-SHADOW)
    text-align: center !important; // TO OVERRIDE ALIGNMENTS OTHER CLASSES MAY DEFINE
    // OTHER (TRANSITONS, ANIMATIONS, CURSOR)
}
.ta-right {
    // POSITIONING (DISPLAY, FLEX, FLEX ITEM, POSITION, LEFT, TOP, TRANSFORM)
    // BOX SIZING (WIDTH, HEIGHT, MARGIN, PADDING)
    // BOX STYLING (OPACITY, BACKGROUND, BOX SHADOW, BORDER, BORDER RADIUS, OVERFLOW)
    // FONT STYLING (FONT, FONT-FAMILY, FONT-STYLE, FONT-SIZE, LINE-HEIGHT, FONT-WEIGHT)
    // TEXT STYLING (TEXT-DECORATION, TEXT-TRANSFORM, TEXT-ALIGN, TEXT-SHADOW)
    text-align: right !important; // TO OVERRIDE ALIGNMENTS OTHER CLASSES MAY DEFINE
    // OTHER (TRANSITONS, ANIMATIONS, CURSOR)
}
